{"version":3,"file":"static/js/271.a05b1d6f.chunk.js","mappings":"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","sources":["webpack://magazine/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","hoc/withPaginator.jsx","redux/favority/favoritySelectors.js","components/common/Products/FavorityProductsContainer.jsx","pages/Favority.jsx","webpack://magazine/./src/components/common/Products/Sort/Sort.module.css?33f8","components/common/Products/Sort/Sort.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__rKT2Y\",\"pages\":\"Paginator_pages__YUbRT\",\"activePage\":\"Paginator_activePage__V0D1Z\"};","import classes from './Paginator.module.css';\r\n\r\nconst Paginator = ({ currentPage, totalItemsCount, pageSize, setCurrentPage }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const setPage = (event) => setCurrentPage( +event.target.innerHTML );\r\n    const setPreviosPage = () => currentPage > 1 && setCurrentPage( currentPage - 1 );\r\n    const setNextPage = () => currentPage < pagesCount && setCurrentPage( currentPage + 1 );\r\n\r\n    const pagesElem = pages.map(page => <span onClick={ setPage } className={ page === currentPage ? classes.activePage : '' } key={ page }>{ page }</span>)\r\n    \r\n    return (\r\n        <div className='container'>\r\n            {\r\n                pageSize > 0 && totalItemsCount > 0\r\n                &&\r\n                <div className={ classes.paginator }>\r\n                    <button onClick={ setPreviosPage }>&lt;</button>\r\n                    <div className={ classes.pages }>\r\n                        { pagesElem }\r\n                    </div>\r\n                    <button onClick={ setNextPage }>&gt;</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import Paginator from '../components/common/Paginator/Paginator';\r\n\r\nconst withPaginator = (Component) => {\r\n    return ({ totalItemsCount, currentPage, pageSize, setCurrentPage, ...componentProps }) => {\r\n        return (\r\n            <>\r\n                <Component { ...componentProps } currentPage={ currentPage } pageSize={ pageSize } />\r\n                <Paginator \r\n                    totalItemsCount={ totalItemsCount }\r\n                    currentPage={ currentPage }\r\n                    pageSize={ pageSize }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withPaginator;","export const getFavority = (state) => {\r\n    return state.favority.favority;\r\n};\r\n\r\nexport const getTotalFavorityCount = (state) => {\r\n    return state.favority.totalFavorityCount;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.favority.pageSize;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.favority.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.favority.isFetching;\r\n};\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Products from './Products';\r\nimport Sort from './Sort/Sort';\r\nimport withPaginator from './../../../hoc/withPaginator';\r\nimport { deleteFavority, getFavorityThunk, setFavority } from '../../../redux/favority/favorityThunks';\r\nimport { addProduct } from '../../../redux/bin/binThunks';\r\nimport { getCurrentPage, getFavority, getIsFetching, getPageSize, getTotalFavorityCount } from '../../../redux/favority/favoritySelectors';\r\nimport { setCategory, setCurrentPage, setSortBy } from '../../../redux/favority/favorityReducer';\r\n\r\nclass FavorityProductsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getFavorityThunk(this.props.currentPage, this.props.pageSize, this.props.category, this.props.sortBy);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        let { currentPage, pageSize, category, sortBy } = this.props;\r\n        if (prevState.currentPage !== currentPage || prevState.category !== category || prevState.sortBy !== sortBy) {\r\n            this.props.getFavorityThunk(currentPage, pageSize, category, sortBy);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Избранные товары</h2>\r\n                <Sort setCategory={ setCategory } setSortBy={ setSortBy }/>\r\n                <Products {...this.props} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        totalItemsCount: getTotalFavorityCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        products: getFavority(state),\r\n        isFetching: getIsFetching(state),\r\n        category: state.favority.category,\r\n        sortBy: state.favority.sortBy\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setFavority, addProduct, getFavorityThunk, deleteFavority, setCurrentPage, setCategory, setSortBy }),\r\n    withPaginator\r\n)(FavorityProductsContainer); ","import HeaderContainer from './../components/common/Header/HeaderContainer';\r\nimport FooterContainer from './../components/common/Footer/FooterContainer';\r\nimport FavorityProductsContainer from '../components/common/Products/FavorityProductsContainer';\r\n\r\nconst Favority = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer />\r\n            <FavorityProductsContainer title='Избранные товары' />\r\n            <FooterContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Favority;","// extracted by mini-css-extract-plugin\nexport default {\"sortSection\":\"Sort_sortSection__TQVYQ\",\"select\":\"Sort_select__PBFfh\"};","import { connect, useDispatch } from \"react-redux\";\r\nimport { categories, sortByCategories } from \"../../../../config/sort\";\r\nimport classes from './Sort.module.css';\r\n\r\nconst Sort = ({ category, sortBy, setCategory, setSortBy }) => {\r\n    const categories = category.map(c => <option value={ c.value } key={ c.id }></option>);\r\n    const sortByCategories = sortBy.map(s => <option value={ s.value } key={ s.id }></option>);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onCategoryChange = (event) => {\r\n        dispatch(setCategory(event.target.value));\r\n    }\r\n\r\n    const onSortByChange = (event) => {\r\n        dispatch(setSortBy(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <div className={ classes.sortSection }>\r\n            <div>\r\n                <span>Категория: </span>\r\n                <input type='text' list='category' className={ classes.select } onChange={ onCategoryChange } />\r\n                <datalist id=\"category\">\r\n                    { categories }\r\n                </datalist>\r\n            </div>\r\n            <div>\r\n                <span>Сортировать по: </span>\r\n                <input type=\"text\" list='sortBy' className={ classes.select } onChange={ onSortByChange } />\r\n                <datalist id='sortBy'>\r\n                    { sortByCategories }\r\n                </datalist>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        category: categories,\r\n        sortBy: sortByCategories\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Sort);"],"names":["_ref","currentPage","totalItemsCount","pageSize","setCurrentPage","pagesCount","Math","ceil","pages","i","push","setPage","event","target","innerHTML","pagesElem","map","page","_jsx","onClick","className","classes","children","_jsxs","setPreviosPage","setNextPage","Component","componentProps","_Fragment","Paginator","getFavority","state","favority","getTotalFavorityCount","totalFavorityCount","getPageSize","getCurrentPage","getIsFetching","isFetching","FavorityProductsContainer","React","componentDidMount","this","props","getFavorityThunk","category","sortBy","componentDidUpdate","prevState","render","Sort","setCategory","setSortBy","Products","compose","connect","products","setFavority","addProduct","deleteFavority","withPaginator","Favority","HeaderContainer","title","FooterContainer","categories","sortByCategories","c","value","id","s","dispatch","useDispatch","type","list","onChange"],"sourceRoot":""}