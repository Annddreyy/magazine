{"version":3,"file":"static/js/456.285b8fa4.chunk.js","mappings":"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","sources":["webpack://magazine/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","hoc/withPaginator.jsx","webpack://magazine/./src/components/Pages/ReviewsPage/Reviews/Review/Review.module.css?fc0a","components/Pages/ReviewsPage/Reviews/Review/Review.jsx","webpack://magazine/./src/components/Pages/ReviewsPage/Reviews/Reviews.module.css?4466","components/Pages/ReviewsPage/Reviews/Reviews.jsx","redux/reviews/reviewsThunks.js","redux/reviews/reviewsSelectors.js","components/Pages/ReviewsPage/Reviews/ReviewsContainer.jsx","webpack://magazine/./src/components/Pages/ReviewsPage/NewReview/NewReview.module.css?462c","components/Pages/ReviewsPage/NewReview/NewReview.jsx","components/Pages/ReviewsPage/NewReview/NewReviewContainer.jsx","pages/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__rKT2Y\",\"pages\":\"Paginator_pages__YUbRT\",\"activePage\":\"Paginator_activePage__V0D1Z\"};","import classes from './Paginator.module.css';\r\n\r\nconst Paginator = ({ currentPage, totalItemsCount, pageSize, setCurrentPage }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const setPage = (event) => setCurrentPage( +event.target.innerHTML );\r\n    const setPreviosPage = () => currentPage > 1 && setCurrentPage( currentPage - 1 );\r\n    const setNextPage = () => currentPage < pagesCount && setCurrentPage( currentPage + 1 );\r\n\r\n    const pagesElem = pages.map(page => <span onClick={ setPage } className={ page === currentPage ? classes.activePage : '' } key={ page }>{ page }</span>)\r\n    \r\n    return (\r\n        <div className='container'>\r\n            {\r\n                pageSize > 0\r\n                &&\r\n                <div className={ classes.paginator }>\r\n                    <button onClick={ setPreviosPage }>&lt;</button>\r\n                    <div className={ classes.pages }>\r\n                        { pagesElem }\r\n                    </div>\r\n                    <button onClick={ setNextPage }>&gt;</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import Paginator from '../components/common/Paginator/Paginator';\r\n\r\nconst withPaginator = (Component) => {\r\n    return function wrappedFunction(props) {\r\n        let { totalItemsCount, currentPage, pageSize, setCurrentPage, ...componentProps } = {...props};\r\n        return (\r\n            <>\r\n                <Component { ...componentProps } currentPage={ currentPage } pageSize={ pageSize } />\r\n                <Paginator \r\n                    totalItemsCount={ totalItemsCount }\r\n                    currentPage={ currentPage }\r\n                    pageSize={ pageSize }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withPaginator;","// extracted by mini-css-extract-plugin\nexport default {\"review\":\"Review_review__+dqr8\",\"left\":\"Review_left__k7TRp\",\"information\":\"Review_information__MRDxC\"};","import choosePhoto from '../../../../../utils/choosePhoto';\r\nimport classes from './Review.module.css';\r\nimport personImg from './../../../../../assets/images/person.jpg';\r\nimport { PERSON_DEFAULT_URL } from '../../../../../config/vars';\r\nimport createStars from '../../../../../utils/createStars';\r\n\r\nconst Review = ({ img, fullname, grade, comment }) => {\r\n    let stars = createStars(grade);\r\n    const photo = choosePhoto(img, personImg, PERSON_DEFAULT_URL);\r\n    \r\n    return (\r\n        <article className={ classes.review }>\r\n            <div className={ classes.left }>\r\n                <img src={ photo } alt=\"\" />\r\n                <span>{ fullname }</span>\r\n            </div>\r\n            <div className={ classes.information }>\r\n                <p>{ comment }</p>\r\n                <div>{ stars }</div>\r\n            </div>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default Review;","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"Reviews_items__CUP41\"};","import { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Review from './Review/Review';\r\nimport withLoader from '../../../../hoc/withLoader';\r\nimport classes from './Reviews.module.css';\r\n\r\nconst Reviews = ({ reviews }) => {\r\n    const reviewsElem = reviews.map(review => <Review {...review} key={ review.id } />)\r\n    return (\r\n        <section className='container'>\r\n            <h2>Отзывы</h2>\r\n            <div className={ classes.items }>\r\n                { reviewsElem }\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isFetching: state.reviews.isFetching\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLoader\r\n)(Reviews);","import { reviewsAPI } from './../../api/api';\r\nimport { addReviewMessage, setIsFetching, setReviews } from './reviewsReducer';\r\n\r\nexport const getReviews = (page, size) => async(dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    let reviews = await reviewsAPI.getReviews(page, size);\r\n    dispatch(setIsFetching(false));\r\n    dispatch(setReviews(reviews));\r\n};\r\nexport const addReview = (id, fullname, img, comment, grade) => async(dispatch) => {\r\n    await reviewsAPI.addReview(id, comment, grade);\r\n    dispatch(addReviewMessage(id, fullname, img, comment, grade));\r\n};\r\n","export const getTotalReviews = (state) => {\r\n    return state.reviews.totalReviewsCount;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.reviews.pageSize;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.reviews.currentPage;\r\n};\r\n\r\nexport const getReviewsSelector = (state) => {\r\n    return state.reviews.reviews;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.reviews.isFetching;\r\n};\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Reviews from './Reviews';\r\nimport withPaginator from './../../../../hoc/withPaginator';\r\nimport { setCurrentPage } from '../../../../redux/reviews/reviewsReducer';\r\nimport { getReviews } from '../../../../redux/reviews/reviewsThunks';\r\nimport { getCurrentPage, getPageSize, getReviewsSelector, getTotalReviews } from '../../../../redux/reviews/reviewsSelectors';\r\n\r\nclass ReviewsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getReviews(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (prevState.currentPage !== this.props.currentPage) {\r\n            this.props.getReviews(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Reviews reviews={ this.props.reviews } />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        reviews: getReviewsSelector(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalReviews(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getReviews, setCurrentPage }),\r\n    withPaginator\r\n)(ReviewsContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"NewReview_items__cerpl\",\"form\":\"NewReview_form__Erjxf\",\"img\":\"NewReview_img__NH9FK\",\"left\":\"NewReview_left__5VdXt\",\"mainItems\":\"NewReview_mainItems__If4J9\",\"text\":\"NewReview_text__J9AWy\",\"information\":\"NewReview_information__9tvkw\",\"stars\":\"NewReview_stars__cpAHm\",\"title\":\"NewReview_title__gOB2k\",\"button\":\"NewReview_button__FWxZN\"};","import React, { useState } from 'react';\r\nimport Star from './../../../common/Star/Star';\r\nimport choosePhoto from '../../../../utils/choosePhoto';\r\nimport generateFullName from '../../../../utils/generateFullName';\r\nimport classes from './NewReview.module.css';\r\nimport { personDefault } from '../../../../config/images';\r\nimport { PERSON_DEFAULT_URL } from '../../../../config/vars';\r\n\r\nconst NewReview = ({ addReview, isAuth, ...user }) => {\r\n    let [grade, setGrade] = useState(1);\r\n    const textArea = React.createRef();\r\n    \r\n    const starSelect = (event) => {\r\n        const target = event.target.closest('span');\r\n        setGrade( +target.getAttribute('value') )\r\n    }\r\n    \r\n    const stars = [];\r\n    for (let i = 1; i <= 5; i++) {\r\n        let isFill = grade >= i;\r\n        stars.push(\r\n            <span  key={ i } value={ i } onPointerOver={ starSelect }>\r\n                <Star isFill={ isFill } />\r\n            </span>\r\n        )\r\n    }\r\n    \r\n    const photo = choosePhoto(user.img, personDefault, PERSON_DEFAULT_URL);\r\n    const fullname = isAuth && generateFullName(user.surname, user.name, user.patronymic);\r\n    \r\n    const addReviewHandler = (event) => {\r\n        let comment = textArea.current.value;\r\n        addReview(user.id, fullname, user.img, comment, grade);\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <section className='container'>\r\n            <div className={ classes.items }>\r\n            { \r\n                isAuth\r\n                ?\r\n                <>\r\n                    <h3 className={ classes.title }>Будем благодарны, если вы оставите отзыв</h3>\r\n                    <form action=\"\" className={ classes.form }>\r\n                        <div className={ classes.mainItems }>\r\n                            <div className={ classes.left }>\r\n                                <img src={ photo } className={ classes.img } alt=\"\" />\r\n                                <span>{ fullname }</span>\r\n                            </div>\r\n                            <div className={ classes.information }>\r\n                                <textarea ref={ textArea } name=\"\" id=\"\" className={ classes.text }>\r\n                                </textarea>\r\n                                <div className={ classes.stars }>\r\n                                    { stars }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button className={ classes.button } onClick={ addReviewHandler }>Добавить отзыв</button>\r\n                    </form>\r\n                </>\r\n                :\r\n                <h3>Для того, чтобы оставить отзыв, необходимо авторизоваться</h3>\r\n            }\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default NewReview;","import { connect } from 'react-redux';\r\nimport NewReview from './NewReview'\r\nimport { addReview } from '../../../../redux/reviews/reviewsThunks';\r\nimport { getId, getImg, getIsAuth, getName, getPatronymic, getSurname } from '../../../../redux/auth/authSelectors';\r\n\r\nconst NewReviewContainer = (props) => {\r\n    return (\r\n        <NewReview {...props} />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state),\r\n        id: getId(state),\r\n        surname: getSurname(state),\r\n        name: getName(state),\r\n        patronymic: getPatronymic(state),\r\n        img: getImg(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { addReview })(NewReviewContainer);","import HeaderContainer from './../components/common/Header/HeaderContainer';\r\nimport FooterContainer from './../components/common/Footer/FooterContainer';\r\n\r\nimport ReviewsContainer from './../components/Pages/ReviewsPage/Reviews/ReviewsContainer';\r\nimport NewReview from '../components/Pages/ReviewsPage/NewReview/NewReview';\r\nimport NewReviewContainer from '../components/Pages/ReviewsPage/NewReview/NewReviewContainer';\r\n\r\nconst Reviews = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer />\r\n            <ReviewsContainer />\r\n            <NewReviewContainer />\r\n            <FooterContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Reviews;"],"names":["_ref","currentPage","totalItemsCount","pageSize","setCurrentPage","pagesCount","Math","ceil","pages","i","push","setPage","event","target","innerHTML","pagesElem","map","page","_jsx","onClick","className","classes","children","_jsxs","setPreviosPage","setNextPage","Component","props","componentProps","_Fragment","Paginator","img","fullname","grade","comment","stars","createStars","photo","choosePhoto","personImg","PERSON_DEFAULT_URL","src","alt","compose","connect","state","isFetching","reviews","withLoader","reviewsElem","review","_createElement","Review","key","id","getTotalReviews","totalReviewsCount","getPageSize","getCurrentPage","getReviewsSelector","ReviewsContainer","React","componentDidMount","this","getReviews","componentDidUpdate","prevState","render","Reviews","size","async","dispatch","setIsFetching","reviewsAPI","setReviews","withPaginator","addReview","isAuth","user","setGrade","useState","textArea","starSelect","closest","getAttribute","isFill","value","onPointerOver","Star","personDefault","generateFullName","surname","name","patronymic","action","ref","current","preventDefault","getIsAuth","getId","getSurname","getName","getPatronymic","getImg","addReviewMessage","NewReview","HeaderContainer","NewReviewContainer","FooterContainer"],"sourceRoot":""}