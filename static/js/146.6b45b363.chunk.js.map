{"version":3,"file":"static/js/146.6b45b363.chunk.js","mappings":"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","sources":["components/common/FormControls/FormControls.jsx","redux/app/appSelectors.js","components/Pages/LoginPage/LoginForm/LoginForm.jsx","components/Pages/LoginPage/LoginForm/LoginFormContainer.jsx","pages/Login.jsx","webpack://magazine/./src/components/common/FormControls/FormControls.module.css?7a3d","webpack://magazine/./src/components/common/FormControls/Form.module.css?ffe9","utils/validators/validators.js"],"sourcesContent":["import React from 'react';\r\nimport classes from './FormControls.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const showError = meta.error && meta.touched;\r\n    return (\r\n        <div className={ classes.formControl + \" \" + (showError ? classes.error : '') }>\r\n            <textarea {...input} {...props}></textarea>\r\n            { showError && <span>Ошибка</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const showError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={ classes.formControl + ' ' + (showError ? classes.error : '') }>\r\n            <input type={ props.type } className={ classes.input } {...input} {...props} />\r\n            { showError && <p className={ classes.errorMessage }>{ meta.error }</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const FileInput = ({input, meta, ...props}) => {\r\n    const showError = meta.error && meta.touched;\r\n    return (\r\n        <div className={ classes.formControl + ' ' + (showError ? classes.error : '') }>\r\n            <input \r\n                type={ props.type } \r\n                onChange={(event) => input.onChange(event.target.files[0]) }\r\n                className={ classes.input } \r\n                {...props} \r\n            />\r\n        </div>     \r\n    )\r\n}","export const getLastPage = (state) => {\r\n    return state.app.lastPage;\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../../common/FormControls/FormControls';\r\nimport { requiredField } from './../../../../utils/validators/validators';\r\nimport classes from './../../../common/FormControls/Form.module.css';\r\nimport styles from './../../../../components/common/FormControls/FormControls.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <div className={ classes.form }>\r\n           <div className={ classes.left }>\r\n               <h2 className={ classes.formPartTitle }>Регистрация</h2>\r\n               <p>Нет аккаунта?</p>\r\n               <NavLink to={'/registration'} className={ classes.link }>Зарегистрироваться</NavLink>\r\n           </div>\r\n           <div>\r\n               <h2 className={ classes.formPartTitle }>Авторизация</h2>\r\n               { error && <div className={ styles.formSummaryError }>\r\n                   { error }\r\n               </div> }\r\n               <form action=\"\" method='get' className={ classes.items } onSubmit={ handleSubmit }>\r\n                   <label htmlFor='login'>Логин <span className={ classes.redStar }>*</span></label>\r\n                   <Field \r\n                       type='text'\r\n                       name='login'\r\n                       id='login'\r\n                       component={ Input }\r\n                       validate={ [requiredField] }\r\n                   />\r\n                    <label htmlFor='password'>Пароль <span className={ classes.redStar }>*</span></label>\r\n                    <Field \r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        component={ Input }\r\n                        validate={ [requiredField] }\r\n                    />\r\n                    <button className={ classes.button }>Войти</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default reduxForm({ form: 'login' })(LoginForm);","import { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport LoginForm from './LoginForm';\r\nimport { authUser } from '../../../../redux/auth/authThunks';\r\nimport { getIsAuth } from '../../../../redux/auth/authSelectors';\r\nimport { getLastPage } from '../../../../redux/app/appSelectors';\r\n\r\nconst LoginFormContainer = ({ isAuth, authUser, lastPage, ...other }) => {\r\n    const onSubmit = (formData) => {\r\n        let { login, password } = formData;\r\n        authUser(login, password);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isAuth\r\n                ?\r\n                <Navigate to={ lastPage } />\r\n                :\r\n                <LoginForm {...other} onSubmit={ onSubmit } />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state),\r\n        lastPage: getLastPage(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { authUser })(LoginFormContainer);","import LoginFormContainer from '../components/Pages/LoginPage/LoginForm/LoginFormContainer';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <LoginFormContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__neQaL\",\"error\":\"FormControls_error__7Upak\",\"formSummaryError\":\"FormControls_formSummaryError__llVHA\",\"input\":\"FormControls_input__8UP1w\",\"errorMessage\":\"FormControls_errorMessage__prxIH\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__ptw1s\",\"left\":\"Form_left__CsMML\",\"formPartTitle\":\"Form_formPartTitle__jH+an\",\"items\":\"Form_items__Sj6q0\",\"button\":\"Form_button__jgbHS\",\"redStar\":\"Form_redStar__6bUfV\",\"link\":\"Form_link__IjlKl\",\"selectedImg\":\"Form_selectedImg__g2IST\"};","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return 'Поле обязательное';\r\n};\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value && value.length < minLength) {\r\n        return `Минимальная длина: ${minLength} символов`;\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length < maxLength) {\r\n        return `Максимальная длина: ${maxLength} символов`;\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const correctPassword = value => {\r\n    let passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n    if (passwordRegex.test(value)) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return 'Пароль должен содержать 1 цифру, 1 строчную и 1 заглавную латинскую букву, а также специальный символ из набора \"#?!@$%^&*-\"';\r\n    }\r\n};\r\n"],"names":["Textarea","_ref","input","meta","props","showError","error","touched","_jsxs","className","classes","formControl","children","_jsx","Input","_ref2","type","errorMessage","FileInput","_ref3","onChange","event","target","files","getLastPage","state","app","lastPage","reduxForm","form","handleSubmit","left","formPartTitle","NavLink","to","link","styles","formSummaryError","action","method","items","onSubmit","htmlFor","redStar","Field","name","id","component","validate","requiredField","button","connect","isAuth","getIsAuth","authUser","other","_Fragment","Navigate","LoginForm","formData","login","password","Login","LoginFormContainer","value","minLengthCreator","minLength","length","correctPassword","test"],"sourceRoot":""}