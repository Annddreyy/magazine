{"version":3,"file":"static/js/271.67f51ee1.chunk.js","mappings":"mHACA,QAA4B,6BAA5B,EAAiE,yBAAjE,EAAuG,8B,aCCvG,MA+BA,EA/BkBA,IAAiE,IAAhE,YAAEC,EAAW,gBAAEC,EAAe,SAAEC,EAAQ,eAAEC,GAAgBJ,EACzE,MAAMK,EAAaC,KAAKC,KAAKL,EAAkBC,GAC/C,IAAIK,EAAQ,GAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,MAAME,EAAWC,GAAUR,GAAiBQ,EAAMC,OAAOC,WAInDC,EAAYP,EAAMQ,KAAIC,IAAQC,EAAAA,EAAAA,KAAA,QAAMC,QAAUR,EAAUS,UAAYH,IAAShB,EAAcoB,EAAqB,GAAIC,SAAgBL,GAATA,KAEjI,OACIC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWE,SAElBnB,EAAW,GAAKD,EAAkB,IAElCqB,EAAAA,EAAAA,MAAA,OAAKH,UAAYC,EAAmBC,SAAA,EAChCJ,EAAAA,EAAAA,KAAA,UAAQC,QAXDK,IAAMvB,EAAc,GAAKG,EAAgBH,EAAc,GAW5BqB,SAAC,OACnCJ,EAAAA,EAAAA,KAAA,OAAKE,UAAYC,EAAeC,SAC1BP,KAENG,EAAAA,EAAAA,KAAA,UAAQC,QAdJM,IAAMxB,EAAcI,GAAcD,EAAgBH,EAAc,GAcrCqB,SAAC,UAGtC,ECXd,EAhBuBI,GACZ1B,IAAoF,IAAnF,gBAAEE,EAAe,YAAED,EAAW,SAAEE,EAAQ,eAAEC,KAAmBuB,GAAgB3B,EACjF,OACIuB,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAN,SAAA,EACIJ,EAAAA,EAAAA,KAACQ,EAAS,IAAMC,EAAiB1B,YAAcA,EAAcE,SAAWA,KACxEe,EAAAA,EAAAA,KAACW,EAAS,CACN3B,gBAAkBA,EAClBD,YAAcA,EACdE,SAAWA,EACXC,eAAiBA,MAEtB,C,2ICbR,MAAM0B,EAAeC,GACjBA,EAAMC,SAASA,SAGbC,EAAyBF,GAC3BA,EAAMC,SAASE,mBAGbC,EAAeJ,GACjBA,EAAMC,SAAS7B,SAGbiC,EAAkBL,GACpBA,EAAMC,SAAS/B,YAGboC,EAAiBN,GACnBA,EAAMC,SAASM,W,uBCP1B,MAAMC,UAAkCC,EAAAA,UACpCC,iBAAAA,GACIC,KAAKC,MAAMC,iBAAiBF,KAAKC,MAAM1C,YAAayC,KAAKC,MAAMxC,SACnE,CAEA0C,kBAAAA,CAAmBC,GACXA,EAAU7C,cAAgByC,KAAKC,MAAM1C,aACrCyC,KAAKC,MAAMC,iBAAiBF,KAAKC,MAAM1C,YAAayC,KAAKC,MAAMxC,SAEvE,CAEA4C,MAAAA,GACI,OAAO7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,IAAKN,KAAKC,OAC9B,EAGJ,MAUA,GAAeM,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAXqBnB,IACd,CACH7B,gBAAiB+B,EAAsBF,GACvC9B,YAAamC,EAAeL,GAC5B5B,SAAUgC,EAAYJ,GACtBoB,SAAUrB,EAAYC,GACtBO,WAAYD,EAAcN,MAKL,CAAEqB,YAAW,KAAEC,WAAU,KAAET,iBAAgB,IAAEU,eAAc,KAAElD,eAAe,OACrGmD,EAAAA,EAFJ,CAGEhB,GCzBF,EAViBiB,KAETjC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIJ,EAAAA,EAAAA,KAACuC,EAAAA,EAAe,KAChBvC,EAAAA,EAAAA,KAACqB,EAAyB,CAACmB,MAAM,iGACjCxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAe,M","sources":["webpack://magazine/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","hoc/withPaginator.jsx","redux/favority/favoritySelectors.js","components/common/Products/FavorityProductsContainer.jsx","pages/Favority.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__rKT2Y\",\"pages\":\"Paginator_pages__YUbRT\",\"activePage\":\"Paginator_activePage__V0D1Z\"};","import classes from './Paginator.module.css';\r\n\r\nconst Paginator = ({ currentPage, totalItemsCount, pageSize, setCurrentPage }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const setPage = (event) => setCurrentPage( +event.target.innerHTML );\r\n    const setPreviosPage = () => currentPage > 1 && setCurrentPage( currentPage - 1 );\r\n    const setNextPage = () => currentPage < pagesCount && setCurrentPage( currentPage + 1 );\r\n\r\n    const pagesElem = pages.map(page => <span onClick={ setPage } className={ page === currentPage ? classes.activePage : '' } key={ page }>{ page }</span>)\r\n    \r\n    return (\r\n        <div className='container'>\r\n            {\r\n                pageSize > 0 && totalItemsCount > 0\r\n                &&\r\n                <div className={ classes.paginator }>\r\n                    <button onClick={ setPreviosPage }>&lt;</button>\r\n                    <div className={ classes.pages }>\r\n                        { pagesElem }\r\n                    </div>\r\n                    <button onClick={ setNextPage }>&gt;</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import Paginator from '../components/common/Paginator/Paginator';\r\n\r\nconst withPaginator = (Component) => {\r\n    return ({ totalItemsCount, currentPage, pageSize, setCurrentPage, ...componentProps }) => {\r\n        return (\r\n            <>\r\n                <Component { ...componentProps } currentPage={ currentPage } pageSize={ pageSize } />\r\n                <Paginator \r\n                    totalItemsCount={ totalItemsCount }\r\n                    currentPage={ currentPage }\r\n                    pageSize={ pageSize }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withPaginator;","export const getFavority = (state) => {\r\n    return state.favority.favority;\r\n};\r\n\r\nexport const getTotalFavorityCount = (state) => {\r\n    return state.favority.totalFavorityCount;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.favority.pageSize;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.favority.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.favority.isFetching;\r\n};\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Products from './Products';\r\nimport withPaginator from './../../../hoc/withPaginator';\r\nimport { deleteFavority, getFavorityThunk, setFavority } from '../../../redux/favority/favorityThunks';\r\nimport { addProduct } from '../../../redux/bin/binThunks';\r\nimport { getCurrentPage, getFavority, getIsFetching, getPageSize, getTotalFavorityCount } from '../../../redux/favority/favoritySelectors';\r\nimport { setCurrentPage } from '../../../redux/favority/favorityReducer';\r\n\r\nclass FavorityProductsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getFavorityThunk(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (prevState.currentPage !== this.props.currentPage) {\r\n            this.props.getFavorityThunk(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Products {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        totalItemsCount: getTotalFavorityCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        products: getFavority(state),\r\n        isFetching: getIsFetching(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setFavority, addProduct, getFavorityThunk, deleteFavority, setCurrentPage }),\r\n    withPaginator\r\n)(FavorityProductsContainer);","import HeaderContainer from './../components/common/Header/HeaderContainer';\r\nimport FooterContainer from './../components/common/Footer/FooterContainer';\r\nimport FavorityProductsContainer from '../components/common/Products/FavorityProductsContainer';\r\n\r\nconst Favority = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer />\r\n            <FavorityProductsContainer title='Избранные товары' />\r\n            <FooterContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Favority;"],"names":["_ref","currentPage","totalItemsCount","pageSize","setCurrentPage","pagesCount","Math","ceil","pages","i","push","setPage","event","target","innerHTML","pagesElem","map","page","_jsx","onClick","className","classes","children","_jsxs","setPreviosPage","setNextPage","Component","componentProps","_Fragment","Paginator","getFavority","state","favority","getTotalFavorityCount","totalFavorityCount","getPageSize","getCurrentPage","getIsFetching","isFetching","FavorityProductsContainer","React","componentDidMount","this","props","getFavorityThunk","componentDidUpdate","prevState","render","Products","compose","connect","products","setFavority","addProduct","deleteFavority","withPaginator","Favority","HeaderContainer","title","FooterContainer"],"sourceRoot":""}