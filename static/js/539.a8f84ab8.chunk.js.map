{"version":3,"file":"static/js/539.a8f84ab8.chunk.js","mappings":"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","sources":["webpack://magazine/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","hoc/withPaginator.jsx","components/common/Products/ProductsContainer.jsx","components/common/Products/ProductsContainerWithPaginator.jsx","pages/Catalog.jsx","webpack://magazine/./src/components/common/Products/Sort/Sort.module.css?33f8","components/common/Products/Sort/Sort.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__rKT2Y\",\"pages\":\"Paginator_pages__YUbRT\",\"activePage\":\"Paginator_activePage__V0D1Z\"};","import classes from './Paginator.module.css';\r\n\r\nconst Paginator = ({ currentPage, totalItemsCount, pageSize, setCurrentPage }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const setPage = (event) => setCurrentPage( +event.target.innerHTML );\r\n    const setPreviosPage = () => currentPage > 1 && setCurrentPage( currentPage - 1 );\r\n    const setNextPage = () => currentPage < pagesCount && setCurrentPage( currentPage + 1 );\r\n\r\n    const pagesElem = pages.map(page => <span onClick={ setPage } className={ page === currentPage ? classes.activePage : '' } key={ page }>{ page }</span>)\r\n    \r\n    return (\r\n        <div className='container'>\r\n            {\r\n                pageSize > 0 && totalItemsCount > 0\r\n                &&\r\n                <div className={ classes.paginator }>\r\n                    <button onClick={ setPreviosPage }>&lt;</button>\r\n                    <div className={ classes.pages }>\r\n                        { pagesElem }\r\n                    </div>\r\n                    <button onClick={ setNextPage }>&gt;</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import Paginator from '../components/common/Paginator/Paginator';\r\n\r\nconst withPaginator = (Component) => {\r\n    return ({ totalItemsCount, currentPage, pageSize, setCurrentPage, ...componentProps }) => {\r\n        return (\r\n            <>\r\n                <Component { ...componentProps } currentPage={ currentPage } pageSize={ pageSize } />\r\n                <Paginator \r\n                    totalItemsCount={ totalItemsCount }\r\n                    currentPage={ currentPage }\r\n                    pageSize={ pageSize }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withPaginator;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Products from './Products';\r\nimport Sort from './Sort/Sort';\r\nimport { getProducts } from '../../../redux/products/productsThunks';\r\nimport { setFavority, deleteFavority } from '../../../redux/favority/favorityThunks';\r\nimport { addProduct } from '../../../redux/bin/binThunks';\r\nimport { getIsFetching, getProductsSelector } from '../../../redux/products/productsSelectors';\r\nimport { setSortBy, setCategory } from '../../../redux/products/productsReducer';\r\n\r\nclass ProductsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getProducts(this.props.currentPage || 1, this.props.pageSize || 6);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        let { currentPage, pageSize, category, sortBy } = this.props;\r\n        if (prevState.currentPage !== currentPage || prevState.category !== category || prevState.sortBy !== sortBy) {\r\n            this.updateProductsList(currentPage, pageSize, category, sortBy);\r\n        }\r\n    }\r\n\r\n    updateProductsList(currentPage, pageSize, category = undefined, sortBy = undefined) {\r\n        this.props.getProducts(currentPage, pageSize, category, sortBy);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Каталог товаров</h2>\r\n                <Sort setCategory={ this.props.setCategory } setSortBy={ this.props.setSortBy } />\r\n                <Products \r\n                    products={ this.props.products }\r\n                    setFavority={ this.props.setFavority }\r\n                    addProduct={ this.props.addProduct }\r\n                    deleteFavority={ this.props.deleteFavority }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        category: state.products.category,\r\n        sortBy: state.products.sortBy,\r\n        products: getProductsSelector(state),\r\n        isFetching: getIsFetching(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFavority, addProduct, getProducts, deleteFavority, setCategory, setSortBy })(ProductsContainer);","import { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport withPaginator from '../../../hoc/withPaginator';\r\nimport ProductsContainer from './ProductsContainer';\r\nimport { getCurrentPage, getPageSize, getTotalProductsCount } from '../../../redux/products/productsSelectors';\r\nimport { setCurrentPage } from '../../../redux/products/productsReducer';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalProductsCount(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setCurrentPage }),\r\n    withPaginator\r\n)(ProductsContainer);","import HeaderContainer from './../components/common/Header/HeaderContainer';\r\nimport FooterContainer from './../components/common/Footer/FooterContainer';\r\nimport ProductsContainerWithPaginator from '../components/common/Products/ProductsContainerWithPaginator';\r\n\r\nconst Catalog = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer />\r\n            <ProductsContainerWithPaginator title='Каталог товаров' />\r\n            <FooterContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Catalog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sortSection\":\"Sort_sortSection__TQVYQ\",\"select\":\"Sort_select__PBFfh\"};","import { connect, useDispatch } from \"react-redux\";\r\nimport { categories, sortByCategories } from \"../../../../config/sort\";\r\nimport classes from './Sort.module.css';\r\n\r\nconst Sort = ({ category, sortBy, setCategory, setSortBy }) => {\r\n    const categories = category.map(c => <option value={ c.value } key={ c.id }></option>);\r\n    const sortByCategories = sortBy.map(s => <option value={ s.value } key={ s.id }></option>);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onCategoryChange = (event) => {\r\n        dispatch(setCategory(event.target.value));\r\n    }\r\n\r\n    const onSortByChange = (event) => {\r\n        dispatch(setSortBy(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <div className={ classes.sortSection }>\r\n            <div>\r\n                <span>Категория: </span>\r\n                <input type='text' list='category' className={ classes.select } onChange={ onCategoryChange } />\r\n                <datalist id=\"category\">\r\n                    { categories }\r\n                </datalist>\r\n            </div>\r\n            <div>\r\n                <span>Сортировать по: </span>\r\n                <input type=\"text\" list='sortBy' className={ classes.select } onChange={ onSortByChange } />\r\n                <datalist id='sortBy'>\r\n                    { sortByCategories }\r\n                </datalist>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        category: categories,\r\n        sortBy: sortByCategories\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Sort);"],"names":["_ref","currentPage","totalItemsCount","pageSize","setCurrentPage","pagesCount","Math","ceil","pages","i","push","setPage","event","target","innerHTML","pagesElem","map","page","_jsx","onClick","className","classes","children","_jsxs","setPreviosPage","setNextPage","Component","componentProps","_Fragment","Paginator","ProductsContainer","React","componentDidMount","this","props","getProducts","componentDidUpdate","prevState","category","sortBy","updateProductsList","arguments","length","undefined","render","Sort","setCategory","setSortBy","Products","products","setFavority","addProduct","deleteFavority","connect","state","getProductsSelector","isFetching","getIsFetching","compose","getCurrentPage","getPageSize","getTotalProductsCount","withPaginator","Catalog","HeaderContainer","ProductsContainerWithPaginator","title","FooterContainer","categories","sortByCategories","c","value","id","s","dispatch","useDispatch","type","list","onChange"],"sourceRoot":""}