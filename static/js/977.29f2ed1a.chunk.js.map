{"version":3,"file":"static/js/977.29f2ed1a.chunk.js","mappings":"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","sources":["webpack://magazine/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","hoc/withPaginator.jsx","components/common/FormControls/FormControls.jsx","webpack://magazine/./src/components/common/FormControls/FormControls.module.css?7a3d","webpack://magazine/./src/components/Pages/ReviewsPage/Reviews/Review/Review.module.css?fc0a","components/Pages/ReviewsPage/Reviews/Review/Review.jsx","webpack://magazine/./src/components/Pages/ReviewsPage/Reviews/Reviews.module.css?4466","components/Pages/ReviewsPage/Reviews/Reviews.jsx","redux/reviews/reviewsThunks.js","redux/reviews/reviewsSelectors.js","components/Pages/ReviewsPage/Reviews/ReviewsContainer.jsx","webpack://magazine/./src/components/Pages/ReviewsPage/NewReview/NewReview.module.css?462c","webpack://magazine/./src/components/Pages/ReviewsPage/NewReview/NewReviewForm/NewReviewForm.module.css?d124","components/Pages/ReviewsPage/NewReview/NewReviewForm/NewReviewForm.jsx","components/Pages/ReviewsPage/NewReview/NewReview.jsx","components/Pages/ReviewsPage/NewReview/NewReviewContainer.jsx","pages/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__rKT2Y\",\"pages\":\"Paginator_pages__YUbRT\",\"activePage\":\"Paginator_activePage__V0D1Z\"};","import classes from './Paginator.module.css';\r\n\r\nconst Paginator = ({ currentPage, totalItemsCount, pageSize, setCurrentPage }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const setPage = (event) => setCurrentPage( +event.target.innerHTML );\r\n    const setPreviosPage = () => currentPage > 1 && setCurrentPage( currentPage - 1 );\r\n    const setNextPage = () => currentPage < pagesCount && setCurrentPage( currentPage + 1 );\r\n\r\n    const pagesElem = pages.map(page => <span onClick={ setPage } className={ page === currentPage ? classes.activePage : '' } key={ page }>{ page }</span>)\r\n    \r\n    return (\r\n        <div className='container'>\r\n            {\r\n                pageSize > 0 && totalItemsCount > 0\r\n                &&\r\n                <div className={ classes.paginator }>\r\n                    <button onClick={ setPreviosPage }>&lt;</button>\r\n                    <div className={ classes.pages }>\r\n                        { pagesElem }\r\n                    </div>\r\n                    <button onClick={ setNextPage }>&gt;</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import Paginator from '../components/common/Paginator/Paginator';\r\n\r\nconst withPaginator = (Component) => {\r\n    return ({ totalItemsCount, currentPage, pageSize, setCurrentPage, ...componentProps }) => {\r\n        return (\r\n            <>\r\n                <Component { ...componentProps } currentPage={ currentPage } pageSize={ pageSize } />\r\n                <Paginator \r\n                    totalItemsCount={ totalItemsCount }\r\n                    currentPage={ currentPage }\r\n                    pageSize={ pageSize }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withPaginator;","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const showError = meta.error && meta.touched;\r\n    return (\r\n        <div className={ classes.formControl + \" \" + (showError ? classes.error : '') }>\r\n            <textarea {...input} {...props}></textarea>\r\n            { showError && <span>Ошибка</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const showError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={ classes.formControl + ' ' + (showError ? classes.error : '') }>\r\n            <input type={ props.type } className={ classes.input } {...input} {...props} />\r\n            { showError && <p className={ classes.errorMessage }>{ meta.error }</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const FileInput = ({input, meta, ...props}) => {\r\n    const showError = meta.error && meta.touched;\r\n    return (\r\n        <div className={ classes.formControl + ' ' + (showError ? classes.error : '') }>\r\n            <input \r\n                type={ props.type } \r\n                onChange={(event) => input.onChange(event.target.files[0]) }\r\n                className={ classes.input } \r\n                {...props} \r\n            />\r\n        </div>     \r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__neQaL\",\"error\":\"FormControls_error__7Upak\",\"formSummaryError\":\"FormControls_formSummaryError__llVHA\",\"input\":\"FormControls_input__8UP1w\",\"errorMessage\":\"FormControls_errorMessage__prxIH\"};","// extracted by mini-css-extract-plugin\nexport default {\"review\":\"Review_review__+dqr8\",\"left\":\"Review_left__k7TRp\",\"information\":\"Review_information__MRDxC\",\"comment\":\"Review_comment__gfhJp\"};","import choosePhoto from '../../../../../utils/choosePhoto';\r\nimport classes from './Review.module.css';\r\nimport personImg from './../../../../../assets/images/person.jpg';\r\nimport { PERSON_DEFAULT_URL } from '../../../../../config/vars';\r\nimport createStars from '../../../../../utils/createStars';\r\n\r\nconst Review = ({ img, fullname, grade, comment }) => {\r\n    let stars = createStars(grade);\r\n    const photo = choosePhoto(img, personImg, PERSON_DEFAULT_URL);\r\n    \r\n    return (\r\n        <article className={ classes.review }>\r\n            <div className={ classes.left }>\r\n                <img src={ photo } alt=\"\" />\r\n                <span>{ fullname }</span>\r\n            </div>\r\n            <div className={ classes.information }>\r\n                <p className={ classes.comment }>{ comment }</p>\r\n                <div>{ stars }</div>\r\n            </div>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default Review;","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"Reviews_items__CUP41\"};","import { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Review from './Review/Review';\r\nimport withLoader from '../../../../hoc/withLoader';\r\nimport classes from './Reviews.module.css';\r\n\r\nconst Reviews = ({ reviews }) => {\r\n    const reviewsElem = reviews.map(review => <Review {...review} key={ review.id } />)\r\n    return (\r\n        <section className='container'>\r\n            <h2>Отзывы</h2>\r\n            <div className={ classes.items }>\r\n                { reviewsElem }\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isFetching: state.reviews.isFetching\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLoader\r\n)(Reviews);","import { reviewsAPI } from './../../api/api';\r\nimport { setIsFetching, setReviews } from './reviewsReducer';\r\n\r\nexport const getReviews = (page, size) => async(dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    let reviews = await reviewsAPI.getReviews(page, size);\r\n    dispatch(setIsFetching(false));\r\n    dispatch(setReviews(reviews));\r\n};\r\nexport const addReview = (id, comment, grade) => async(dispatch) => {\r\n    await reviewsAPI.addReview(id, comment, grade);\r\n};\r\n","export const getTotalReviews = (state) => {\r\n    return state.reviews.totalReviewsCount;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.reviews.pageSize;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.reviews.currentPage;\r\n};\r\n\r\nexport const getReviewsSelector = (state) => {\r\n    return state.reviews.reviews;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.reviews.isFetching;\r\n};\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Reviews from './Reviews';\r\nimport withPaginator from './../../../../hoc/withPaginator';\r\nimport { setCurrentPage } from '../../../../redux/reviews/reviewsReducer';\r\nimport { getReviews } from '../../../../redux/reviews/reviewsThunks';\r\nimport { getCurrentPage, getPageSize, getReviewsSelector, getTotalReviews } from '../../../../redux/reviews/reviewsSelectors';\r\n\r\nclass ReviewsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getReviews(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (prevState.currentPage !== this.props.currentPage) {\r\n            this.props.getReviews(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Reviews reviews={ this.props.reviews } />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        reviews: getReviewsSelector(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalReviews(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getReviews, setCurrentPage }),\r\n    withPaginator\r\n)(ReviewsContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"NewReview_items__cerpl\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewReviewForm_form__jxWq3\",\"img\":\"NewReviewForm_img__ecWsF\",\"left\":\"NewReviewForm_left__a8wgO\",\"mainItems\":\"NewReviewForm_mainItems__qAEfB\",\"text\":\"NewReviewForm_text__4c4GX\",\"information\":\"NewReviewForm_information__tF+dQ\",\"stars\":\"NewReviewForm_stars__pdlVN\",\"title\":\"NewReviewForm_title__5rjFW\",\"button\":\"NewReviewForm_button__+gaPG\"};","import { useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Star from './../../../../common/Star/Star';\r\nimport classes from './NewReviewForm.module.css';\r\nimport { Textarea } from '../../../../common/FormControls/FormControls';\r\n\r\nconst NewReviewForm = ({ photo, fullname, handleSubmit, onSubmit }) => {\r\n    let [grade, setGrade] = useState(1);\r\n    \r\n    const starSelect = (event) => {\r\n        const target = event.target.closest('span');\r\n        setGrade( +target.getAttribute('value') )\r\n    }\r\n\r\n    const stars = [];\r\n    for (let i = 1; i <= 5; i++) {\r\n        let isFill = grade >= i;\r\n        stars.push(\r\n            <span  key={ i } value={ i } onPointerOver={ starSelect }>\r\n                <Star isFill={ isFill } />\r\n            </span>\r\n        )\r\n    }\r\n\r\n    const addData = (formValues) => {\r\n        onSubmit({ ...formValues, grade });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className={ classes.title }>Будем благодарны, если вы оставите отзыв</h3>\r\n            <form action=\"\" className={ classes.form } onSubmit={ handleSubmit(addData) }>\r\n                <div className={ classes.mainItems }>\r\n                    <div className={ classes.left }>\r\n                        <img src={ photo } className={ classes.img } alt=\"\" />\r\n                        <span>{ fullname }</span>\r\n                    </div>\r\n                    <div className={ classes.information }>\r\n                        <Field \r\n                            id='comment'\r\n                            name='comment'\r\n                            component={ Textarea }\r\n                            className={ classes.text }\r\n                        />\r\n                        <div className={ classes.stars }>{ stars }</div>\r\n                    </div>\r\n                </div>\r\n                <button className={ classes.button }>Добавить отзыв</button>\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default reduxForm({ form: 'comment' })(NewReviewForm);\r\n","import React from 'react';\r\nimport choosePhoto from '../../../../utils/choosePhoto';\r\nimport generateFullName from '../../../../utils/generateFullName';\r\nimport classes from './NewReview.module.css';\r\nimport { personDefault } from '../../../../config/images';\r\nimport { PERSON_DEFAULT_URL } from '../../../../config/vars';\r\nimport NewReviewForm from './NewReviewForm/NewReviewForm';\r\n\r\nconst NewReview = ({ addReview, isAuth, getReviews, currentPage, pageSize, ...user }) => {\r\n    const photo = choosePhoto(user.img, personDefault, PERSON_DEFAULT_URL);\r\n    const fullname = isAuth && generateFullName(user.surname, user.name, user.patronymic);\r\n\r\n    const onSubmit = async({ comment, grade }) => {\r\n        await addReview(user.id, comment, grade);\r\n        getReviews(currentPage, pageSize)\r\n    };\r\n\r\n    return (\r\n        <section className='container'>\r\n            <div className={ classes.items }>\r\n            { \r\n                isAuth\r\n                ?\r\n                <NewReviewForm \r\n                    fullname={ fullname }\r\n                    photo={ photo }\r\n                    onSubmit={ onSubmit }\r\n                />\r\n                :\r\n                <h3>Для того, чтобы оставить отзыв, необходимо авторизоваться</h3>\r\n            }\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default NewReview;","import { connect } from 'react-redux';\r\nimport NewReview from './NewReview'\r\nimport { addReview, getReviews } from '../../../../redux/reviews/reviewsThunks';\r\nimport { getId, getImg, getIsAuth, getName, getPatronymic, getSurname } from '../../../../redux/auth/authSelectors';\r\nimport { getCurrentPage, getPageSize } from '../../../../redux/reviews/reviewsSelectors';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        isAuth: getIsAuth(state),\r\n        id: getId(state),\r\n        surname: getSurname(state),\r\n        name: getName(state),\r\n        patronymic: getPatronymic(state),\r\n        img: getImg(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { addReview, getReviews })(NewReview);","import HeaderContainer from './../components/common/Header/HeaderContainer';\r\nimport FooterContainer from './../components/common/Footer/FooterContainer';\r\n\r\nimport ReviewsContainer from './../components/Pages/ReviewsPage/Reviews/ReviewsContainer';\r\nimport NewReviewContainer from '../components/Pages/ReviewsPage/NewReview/NewReviewContainer';\r\n\r\nconst Reviews = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer />\r\n            <ReviewsContainer />\r\n            <NewReviewContainer />\r\n            <FooterContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Reviews;"],"names":["_ref","currentPage","totalItemsCount","pageSize","setCurrentPage","pagesCount","Math","ceil","pages","i","push","setPage","event","target","innerHTML","pagesElem","map","page","_jsx","onClick","className","classes","children","_jsxs","setPreviosPage","setNextPage","Component","componentProps","_Fragment","Paginator","Textarea","input","meta","props","showError","error","touched","formControl","Input","_ref2","type","errorMessage","FileInput","_ref3","onChange","files","img","fullname","grade","comment","stars","createStars","photo","choosePhoto","personImg","PERSON_DEFAULT_URL","src","alt","compose","connect","state","isFetching","reviews","withLoader","reviewsElem","review","_createElement","Review","key","id","getReviews","size","async","dispatch","setIsFetching","reviewsAPI","setReviews","getTotalReviews","totalReviewsCount","getPageSize","getCurrentPage","getReviewsSelector","ReviewsContainer","React","componentDidMount","this","componentDidUpdate","prevState","render","Reviews","withPaginator","reduxForm","form","handleSubmit","onSubmit","setGrade","useState","starSelect","closest","getAttribute","isFill","value","onPointerOver","Star","action","formValues","Field","name","component","addReview","isAuth","user","personDefault","generateFullName","surname","patronymic","NewReviewForm","getIsAuth","getId","getSurname","getName","getPatronymic","getImg","NewReview","HeaderContainer","NewReviewContainer","FooterContainer"],"sourceRoot":""}